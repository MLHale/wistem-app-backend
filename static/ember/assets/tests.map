{"version":3,"sources":["vendor/ember-cli/tests-prefix.js","wistem-app-frontend/tests/app.lint-test.js","wistem-app-frontend/tests/helpers/destroy-app.js","wistem-app-frontend/tests/helpers/ember-basic-dropdown.js","wistem-app-frontend/tests/helpers/ember-power-select.js","wistem-app-frontend/tests/helpers/module-for-acceptance.js","wistem-app-frontend/tests/helpers/resolver.js","wistem-app-frontend/tests/helpers/start-app.js","wistem-app-frontend/tests/integration/components/award-display-test.js","wistem-app-frontend/tests/integration/components/award-listing-test.js","wistem-app-frontend/tests/test-helper.js","wistem-app-frontend/tests/tests.lint-test.js","wistem-app-frontend/tests/unit/controllers/application-test.js","wistem-app-frontend/tests/unit/controllers/awards-test.js","wistem-app-frontend/tests/unit/controllers/register-test.js","wistem-app-frontend/tests/unit/controllers/search-test.js","wistem-app-frontend/tests/unit/initializers/auth-manager-test.js","wistem-app-frontend/tests/unit/initializers/navigation-test.js","wistem-app-frontend/tests/unit/initializers/notification-messages-test.js","wistem-app-frontend/tests/unit/models/applicanttype-test.js","wistem-app-frontend/tests/unit/models/areaofinterest-test.js","wistem-app-frontend/tests/unit/models/awardpurpose-test.js","wistem-app-frontend/tests/unit/models/profile-test.js","wistem-app-frontend/tests/unit/models/source-test.js","wistem-app-frontend/tests/unit/models/stemfield-test.js","wistem-app-frontend/tests/unit/models/user-test.js","wistem-app-frontend/tests/unit/routes/awardinfo-test.js","wistem-app-frontend/tests/unit/routes/index-test.js","wistem-app-frontend/tests/unit/routes/login-test.js","wistem-app-frontend/tests/unit/routes/profile-test.js","wistem-app-frontend/tests/unit/routes/register-test.js","wistem-app-frontend/tests/unit/routes/search-test.js","wistem-app-frontend/tests/unit/services/auth-manager-test.js","wistem-app-frontend/tests/unit/services/navigation-test.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["'use strict';\n","define('wistem-app-frontend/tests/app.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('ESLint | app');\n\n  QUnit.test('adapters/application.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'adapters/application.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('app.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'app.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('components/add-award.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/add-award.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('components/award-display.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/award-display.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('components/award-listing.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/award-listing.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('components/edit-award.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/edit-award.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('components/view-list-button.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/view-list-button.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('controllers/application.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/application.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('controllers/awards.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'controllers/awards.js should pass ESLint\\n\\n41:5 - Unexpected console statement. (no-console)\\n53:11 - \\'regex\\' is already defined. (no-redeclare)\\n61:11 - \\'regex\\' is already defined. (no-redeclare)\\n69:11 - \\'regex\\' is already defined. (no-redeclare)\\n135:32 - \\'$\\' is not defined. (no-undef)');\n  });\n\n  QUnit.test('controllers/edit-award.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'controllers/edit-award.js should pass ESLint\\n\\n7:7 - Unexpected console statement. (no-console)\\n11:7 - Unexpected console statement. (no-console)');\n  });\n\n  QUnit.test('controllers/login.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'controllers/login.js should pass ESLint\\n\\n18:7 - Unexpected console statement. (no-console)');\n  });\n\n  QUnit.test('controllers/register.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'controllers/register.js should pass ESLint\\n\\n5:48 - \\'department\\' is defined but never used. (no-unused-vars)');\n  });\n\n  QUnit.test('controllers/search.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'controllers/search.js should pass ESLint\\n\\n21:32 - \\'$\\' is not defined. (no-undef)');\n  });\n\n  QUnit.test('initializers/auth-manager.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'initializers/auth-manager.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('initializers/navigation.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'initializers/navigation.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('initializers/notification-messages.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'initializers/notification-messages.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('models/applicanttype.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/applicanttype.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('models/areaofinterest.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/areaofinterest.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('models/award.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/award.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('models/awardpurpose.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/awardpurpose.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('models/profile.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/profile.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('models/source.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/source.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('models/stemfield.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/stemfield.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('models/user.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/user.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('resolver.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'resolver.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('router.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'router.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('routes/awardinfo.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/awardinfo.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('routes/awards.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/awards.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('routes/index.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/index.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('routes/login.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/login.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('routes/profile.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/profile.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('routes/register.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/register.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('routes/search.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'routes/search.js should pass ESLint\\n\\n17:17 - \\'Ember\\' is not defined. (no-undef)');\n  });\n\n  QUnit.test('services/auth-manager.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'services/auth-manager.js should pass ESLint\\n\\n35:3 - Unexpected console statement. (no-console)\\n52:5 - Unexpected console statement. (no-console)\\n87:5 - Unexpected console statement. (no-console)\\n101:3 - Unexpected console statement. (no-console)\\n105:5 - Unexpected console statement. (no-console)\\n145:5 - Unexpected console statement. (no-console)\\n160:5 - Unexpected console statement. (no-console)');\n  });\n\n  QUnit.test('services/navigation.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'services/navigation.js should pass ESLint\\n\\n');\n  });\n});","define('wistem-app-frontend/tests/helpers/destroy-app', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = destroyApp;\n  var run = Ember.run;\n  function destroyApp(application) {\n    run(application, 'destroy');\n  }\n});","define('wistem-app-frontend/tests/helpers/ember-basic-dropdown', ['exports', 'ember-basic-dropdown/test-support/helpers', 'ember-native-dom-helpers'], function (exports, _helpers, _emberNativeDomHelpers) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.nativeClick = exports.fireKeydown = exports.tapTrigger = exports.clickTrigger = exports.nativeTap = undefined;\n  Object.defineProperty(exports, 'nativeTap', {\n    enumerable: true,\n    get: function () {\n      return _helpers.nativeTap;\n    }\n  });\n  Object.defineProperty(exports, 'clickTrigger', {\n    enumerable: true,\n    get: function () {\n      return _helpers.clickTrigger;\n    }\n  });\n  Object.defineProperty(exports, 'tapTrigger', {\n    enumerable: true,\n    get: function () {\n      return _helpers.tapTrigger;\n    }\n  });\n  Object.defineProperty(exports, 'fireKeydown', {\n    enumerable: true,\n    get: function () {\n      return _helpers.fireKeydown;\n    }\n  });\n  exports.default = _helpers.default;\n  var nativeClick = exports.nativeClick = _emberNativeDomHelpers.click;\n});","define('wistem-app-frontend/tests/helpers/ember-power-select', ['exports', 'ember-power-select/test-support/helpers'], function (exports, _helpers) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.selectChoose = exports.touchTrigger = exports.nativeTouch = exports.clickTrigger = exports.typeInSearch = exports.triggerKeydown = exports.nativeMouseUp = exports.nativeMouseDown = exports.findContains = undefined;\n  exports.default = deprecatedRegisterHelpers;\n\n\n  function deprecateHelper(fn, name) {\n    return function () {\n      (true && !(false) && Ember.deprecate('DEPRECATED `import { ' + name + ' } from \\'../../tests/helpers/ember-power-select\\';` is deprecated. Please, replace it with `import { ' + name + ' } from \\'ember-power-select/test-support/helpers\\';`', false, { until: '1.11.0', id: 'ember-power-select-test-support-' + name }));\n\n      return fn.apply(undefined, arguments);\n    };\n  }\n\n  var findContains = deprecateHelper(_helpers.findContains, 'findContains');\n  var nativeMouseDown = deprecateHelper(_helpers.nativeMouseDown, 'nativeMouseDown');\n  var nativeMouseUp = deprecateHelper(_helpers.nativeMouseUp, 'nativeMouseUp');\n  var triggerKeydown = deprecateHelper(_helpers.triggerKeydown, 'triggerKeydown');\n  var typeInSearch = deprecateHelper(_helpers.typeInSearch, 'typeInSearch');\n  var clickTrigger = deprecateHelper(_helpers.clickTrigger, 'clickTrigger');\n  var nativeTouch = deprecateHelper(_helpers.nativeTouch, 'nativeTouch');\n  var touchTrigger = deprecateHelper(_helpers.touchTrigger, 'touchTrigger');\n  var selectChoose = deprecateHelper(_helpers.selectChoose, 'selectChoose');\n\n  function deprecatedRegisterHelpers() {\n    (true && !(false) && Ember.deprecate(\"DEPRECATED `import registerPowerSelectHelpers from '../../tests/helpers/ember-power-select';` is deprecated. Please, replace it with `import registerPowerSelectHelpers from 'ember-power-select/test-support/helpers';`\", false, { until: '1.11.0', id: 'ember-power-select-test-support-register-helpers' }));\n\n    return (0, _helpers.default)();\n  }\n\n  exports.findContains = findContains;\n  exports.nativeMouseDown = nativeMouseDown;\n  exports.nativeMouseUp = nativeMouseUp;\n  exports.triggerKeydown = triggerKeydown;\n  exports.typeInSearch = typeInSearch;\n  exports.clickTrigger = clickTrigger;\n  exports.nativeTouch = nativeTouch;\n  exports.touchTrigger = touchTrigger;\n  exports.selectChoose = selectChoose;\n});","define('wistem-app-frontend/tests/helpers/module-for-acceptance', ['exports', 'qunit', 'wistem-app-frontend/tests/helpers/start-app', 'wistem-app-frontend/tests/helpers/destroy-app'], function (exports, _qunit, _startApp, _destroyApp) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  exports.default = function (name) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    (0, _qunit.module)(name, {\n      beforeEach: function beforeEach() {\n        this.application = (0, _startApp.default)();\n\n        if (options.beforeEach) {\n          return options.beforeEach.apply(this, arguments);\n        }\n      },\n      afterEach: function afterEach() {\n        var _this = this;\n\n        var afterEach = options.afterEach && options.afterEach.apply(this, arguments);\n        return resolve(afterEach).then(function () {\n          return (0, _destroyApp.default)(_this.application);\n        });\n      }\n    });\n  };\n\n  var resolve = Ember.RSVP.resolve;\n});","define('wistem-app-frontend/tests/helpers/resolver', ['exports', 'wistem-app-frontend/resolver', 'wistem-app-frontend/config/environment'], function (exports, _resolver, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n\n  var resolver = _resolver.default.create();\n\n  resolver.namespace = {\n    modulePrefix: _environment.default.modulePrefix,\n    podModulePrefix: _environment.default.podModulePrefix\n  };\n\n  exports.default = resolver;\n});","define('wistem-app-frontend/tests/helpers/start-app', ['exports', 'wistem-app-frontend/app', 'wistem-app-frontend/config/environment'], function (exports, _app, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = startApp;\n  var merge = Ember.merge;\n  var run = Ember.run;\n  function startApp(attrs) {\n    var attributes = merge({}, _environment.default.APP);\n    attributes = merge(attributes, attrs); // use defaults, but you can override;\n\n    return run(function () {\n      var application = _app.default.create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n      return application;\n    });\n  }\n});","define('wistem-app-frontend/tests/integration/components/award-display-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForComponent)('award-display', 'Integration | Component | award display', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"eIJc3h3h\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"award-display\\\"],false]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"mfqkr+el\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n\\\"],[4,\\\"award-display\\\",null,null,{\\\"statements\\\":[[0,\\\"      template block text\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"  \\\"]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('wistem-app-frontend/tests/integration/components/award-listing-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForComponent)('award-listing', 'Integration | Component | award listing', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"erEfdEWS\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"award-listing\\\"],false]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"fXBfsFRQ\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n\\\"],[4,\\\"award-listing\\\",null,null,{\\\"statements\\\":[[0,\\\"      template block text\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"  \\\"]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('wistem-app-frontend/tests/test-helper', ['wistem-app-frontend/tests/helpers/resolver', 'ember-qunit', 'ember-cli-qunit'], function (_resolver, _emberQunit, _emberCliQunit) {\n  'use strict';\n\n  (0, _emberQunit.setResolver)(_resolver.default);\n  (0, _emberCliQunit.start)();\n});","define('wistem-app-frontend/tests/tests.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('ESLint | tests');\n\n  QUnit.test('helpers/destroy-app.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/destroy-app.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('helpers/module-for-acceptance.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/module-for-acceptance.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('helpers/resolver.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/resolver.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('helpers/start-app.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/start-app.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/award-display-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/award-display-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/award-listing-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/award-listing-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('test-helper.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'test-helper.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/controllers/application-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/application-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/controllers/awards-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/awards-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/controllers/register-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/register-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/controllers/search-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/search-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/initializers/auth-manager-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/initializers/auth-manager-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/initializers/navigation-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/initializers/navigation-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/initializers/notification-messages-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/initializers/notification-messages-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/models/applicanttype-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/applicanttype-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/models/areaofinterest-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/areaofinterest-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/models/awardpurpose-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/awardpurpose-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/models/profile-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/profile-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/models/source-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/source-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/models/stemfield-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/stemfield-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/models/user-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/user-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/routes/awardinfo-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/awardinfo-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/routes/index-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/index-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/routes/login-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/login-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/routes/profile-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/profile-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/routes/register-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/register-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/routes/search-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/search-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/services/auth-manager-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/services/auth-manager-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/services/navigation-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/services/navigation-test.js should pass ESLint\\n\\n');\n  });\n});","define('wistem-app-frontend/tests/unit/controllers/application-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('controller:application', 'Unit | Controller | application', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('wistem-app-frontend/tests/unit/controllers/awards-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('controller:awards', 'Unit | Controller | awards', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('wistem-app-frontend/tests/unit/controllers/register-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('controller:register', 'Unit | Controller | register', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('wistem-app-frontend/tests/unit/controllers/search-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('controller:search', 'Unit | Controller | search', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('wistem-app-frontend/tests/unit/initializers/auth-manager-test', ['wistem-app-frontend/initializers/auth-manager', 'qunit', 'wistem-app-frontend/tests/helpers/destroy-app'], function (_authManager, _qunit, _destroyApp) {\n  'use strict';\n\n  var Application = Ember.Application;\n  var run = Ember.run;\n\n\n  (0, _qunit.module)('Unit | Initializer | auth manager', {\n    beforeEach: function beforeEach() {\n      var _this = this;\n\n      run(function () {\n        _this.application = Application.create();\n        _this.application.deferReadiness();\n      });\n    },\n    afterEach: function afterEach() {\n      (0, _destroyApp.default)(this.application);\n    }\n  });\n\n  // Replace this with your real tests.\n  (0, _qunit.test)('it works', function (assert) {\n    (0, _authManager.initialize)(this.application);\n\n    // you would normally confirm the results of the initializer here\n    assert.ok(true);\n  });\n});","define('wistem-app-frontend/tests/unit/initializers/navigation-test', ['wistem-app-frontend/initializers/navigation', 'qunit', 'wistem-app-frontend/tests/helpers/destroy-app'], function (_navigation, _qunit, _destroyApp) {\n  'use strict';\n\n  var Application = Ember.Application;\n  var run = Ember.run;\n\n\n  (0, _qunit.module)('Unit | Initializer | navigation', {\n    beforeEach: function beforeEach() {\n      var _this = this;\n\n      run(function () {\n        _this.application = Application.create();\n        _this.application.deferReadiness();\n      });\n    },\n    afterEach: function afterEach() {\n      (0, _destroyApp.default)(this.application);\n    }\n  });\n\n  // Replace this with your real tests.\n  (0, _qunit.test)('it works', function (assert) {\n    (0, _navigation.initialize)(this.application);\n\n    // you would normally confirm the results of the initializer here\n    assert.ok(true);\n  });\n});","define('wistem-app-frontend/tests/unit/initializers/notification-messages-test', ['wistem-app-frontend/initializers/notification-messages', 'qunit', 'wistem-app-frontend/tests/helpers/destroy-app'], function (_notificationMessages, _qunit, _destroyApp) {\n  'use strict';\n\n  var Application = Ember.Application;\n  var run = Ember.run;\n\n\n  (0, _qunit.module)('Unit | Initializer | notification messages', {\n    beforeEach: function beforeEach() {\n      var _this = this;\n\n      run(function () {\n        _this.application = Application.create();\n        _this.application.deferReadiness();\n      });\n    },\n    afterEach: function afterEach() {\n      (0, _destroyApp.default)(this.application);\n    }\n  });\n\n  // Replace this with your real tests.\n  (0, _qunit.test)('it works', function (assert) {\n    (0, _notificationMessages.initialize)(this.application);\n\n    // you would normally confirm the results of the initializer here\n    assert.ok(true);\n  });\n});","define('wistem-app-frontend/tests/unit/models/applicanttype-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForModel)('applicanttype', 'Unit | Model | applicanttype', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('wistem-app-frontend/tests/unit/models/areaofinterest-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForModel)('areaofinterest', 'Unit | Model | areaofinterest', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('wistem-app-frontend/tests/unit/models/awardpurpose-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForModel)('awardpurpose', 'Unit | Model | awardpurpose', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('wistem-app-frontend/tests/unit/models/profile-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForModel)('profile', 'Unit | Model | profile', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('wistem-app-frontend/tests/unit/models/source-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForModel)('source', 'Unit | Model | source', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('wistem-app-frontend/tests/unit/models/stemfield-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForModel)('stemfield', 'Unit | Model | stemfield', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('wistem-app-frontend/tests/unit/models/user-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForModel)('user', 'Unit | Model | user', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('wistem-app-frontend/tests/unit/routes/awardinfo-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('route:awardinfo', 'Unit | Route | awardinfo', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('wistem-app-frontend/tests/unit/routes/index-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('route:index', 'Unit | Route | index', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('wistem-app-frontend/tests/unit/routes/login-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('route:login', 'Unit | Route | login', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('wistem-app-frontend/tests/unit/routes/profile-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('route:profile', 'Unit | Route | profile', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('wistem-app-frontend/tests/unit/routes/register-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('route:register', 'Unit | Route | register', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('wistem-app-frontend/tests/unit/routes/search-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('route:search', 'Unit | Route | search', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('wistem-app-frontend/tests/unit/services/auth-manager-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('service:auth-manager', 'Unit | Service | auth manager', {\n    // Specify the other units that are required for this test.\n    // needs: ['service:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var service = this.subject();\n    assert.ok(service);\n  });\n});","define('wistem-app-frontend/tests/unit/services/navigation-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('service:navigation', 'Unit | Service | navigation', {\n    // Specify the other units that are required for this test.\n    // needs: ['service:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var service = this.subject();\n    assert.ok(service);\n  });\n});","require('wistem-app-frontend/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n"],"names":[],"mappingslLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnpJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;","file":"tests.js"}